// Fungsi utama yang dipanggil saat halaman dimuat
function muatAplikasi() {
    muatProyek();
    addShift();
    document.getElementById('tanggalLaporan').valueAsDate = new Date();
}

function uraiLaporanDariTeks() {
    const teks = document.getElementById('importLaporan').value;
    if (!teks.trim()) {
        Toastify({ text: "Text box masih kosong.", duration: 3000 }).showToast();
        return;
    }
    try {
        const shiftContainer = document.getElementById('shift-container');
        shiftContainer.innerHTML = '';
        const matchProyek = teks.match(/\*Update (.*?)\*/);
        if (matchProyek) {
            const namaProyekDariTeks = matchProyek[1].trim();
            let projects = JSON.parse(localStorage.getItem('daftarProyek')) || [];
            const projectExists = projects.some(p => p.nama.toLowerCase() === namaProyekDariTeks.toLowerCase());
            if (!projectExists) {
                projects.push({ nama: namaProyekDariTeks, totalOutput: 0 });
                localStorage.setItem('daftarProyek', JSON.stringify(projects));
                muatProyek();
                Toastify({ text: `Proyek baru "${namaProyekDariTeks}" otomatis ditambahkan!`, duration: 3000 }).showToast();
            }
            document.getElementById('projectSelect').value = namaProyekDariTeks;
        }
        const matchTanggal = teks.match(/\*.*?,\s*(\d{2})\/(\d{2})\/(\d{2})\*/);
        if (matchTanggal) {
            const [_, tgl, bln, thn] = matchTanggal;
            document.getElementById('tanggalLaporan').value = `20${thn}-${bln}-${tgl}`;
        }
        const matchTotal = teks.match(/\*Total out\s*:\s*([\d.,]+)\s*\+/);
        if (matchTotal) {
            const totalAwal = matchTotal[1].replace(/\./g, '').replace(',', '.');
            document.getElementById('totalSebelumnya').value = parseFloat(totalAwal).toFixed(2);
        } else {
            document.getElementById('totalSebelumnya').value = '';
        }
        const shiftRegex = /([A-Z0-9\s]+?)\s+(LS[12])\s+(\d+)x\s+In\s*:\s*([\d.,]+)\s*kg\s+Out\s*:\s*([\d.,]+)\s*kg/gi;
        const semuaShift = [...teks.matchAll(shiftRegex)];
        if (semuaShift.length > 0) {
            semuaShift.forEach(match => {
                const [_, operator, shift, proses, beratIn, beratOut] = match;
                const shiftBlock = addShiftSimple(false);
                shiftBlock.querySelector('.operator').value = operator.trim();
                shiftBlock.querySelector('.shift-type').value = shift.toUpperCase();
                shiftBlock.querySelector('.jumlahProses').value = proses;
                shiftBlock.querySelector('.beratIn').value = beratIn.replace(',', '.');
                shiftBlock.querySelector('.totalBeratOut').value = beratOut.replace(',', '.');
            });
        }
        addShift();
        updateShiftNumbers();
        Toastify({ text: "Data berhasil dibaca dan diisi ke form!", duration: 3000, style: { background: "linear-gradient(to right, #00b09b, #96c93d)" } }).showToast();
    } catch (error) {
        console.error("Error saat mengurai teks:", error);
        Toastify({ text: "Gagal membaca teks. Format mungkin tidak sesuai.", duration: 3000, style: { background: "var(--danger-color)" } }).showToast();
    }
}
function muatProyek() { const projectSelect = document.getElementById('projectSelect'); const projects = JSON.parse(localStorage.getItem('daftarProyek')) || []; projectSelect.innerHTML = ''; if (projects.length === 0) { projects.push({ nama: "Prj Steril : Cengkeh Tangkai", totalOutput: 0 }); localStorage.setItem('daftarProyek', JSON.stringify(projects)); } projects.forEach(project => { const option = document.createElement('option'); option.value = project.nama; option.textContent = project.nama; projectSelect.appendChild(option); }); gantiProyek(); }
function gantiProyek() { const projectSelect = document.getElementById('projectSelect'); const namaProyekTerpilih = projectSelect.value; const projects = JSON.parse(localStorage.getItem('daftarProyek')) || []; const projectData = projects.find(p => p.nama === namaProyekTerpilih); if (projectData && projectData.totalOutput > 0) { document.getElementById('totalSebelumnya').value = parseFloat(projectData.totalOutput).toFixed(2); } else { document.getElementById('totalSebelumnya').value = ''; } }
function tampilkanModalTambahProyek() { document.getElementById('newProjectName').value = ''; document.getElementById('addProjectModal').classList.remove('hidden'); }
function tutupModal(modalId) { document.getElementById(modalId).classList.add('hidden'); }
function tambahProyek() { const newProjectName = document.getElementById('newProjectName').value.trim(); if (!newProjectName) { Toastify({ text: "Nama proyek tidak boleh kosong!", duration: 3000, style: { background: "var(--danger-color)" } }).showToast(); return; } let projects = JSON.parse(localStorage.getItem('daftarProyek')) || []; if (projects.some(p => p.nama.toLowerCase() === newProjectName.toLowerCase())) { Toastify({ text: "Nama proyek sudah ada!", duration: 3000, style: { background: "var(--danger-color)" } }).showToast(); return; } projects.push({ nama: newProjectName, totalOutput: 0 }); localStorage.setItem('daftarProyek', JSON.stringify(projects)); muatProyek(); document.getElementById('projectSelect').value = newProjectName; gantiProyek(); tutupModal('addProjectModal'); Toastify({ text: `Proyek "${newProjectName}" berhasil ditambahkan!`, duration: 3000 }).showToast(); }
function hapusProyek() { const projectSelect = document.getElementById('projectSelect'); const namaProyekTerpilih = projectSelect.value; if (!namaProyekTerpilih) { Toastify({ text: "Tidak ada proyek untuk dihapus.", duration: 3000 }).showToast(); return; } if (confirm(`Apakah Anda yakin ingin menghapus proyek "${namaProyekTerpilih}"? Semua data total outputnya akan hilang.`)) { let projects = JSON.parse(localStorage.getItem('daftarProyek')) || []; const projectsBaru = projects.filter(p => p.nama !== namaProyekTerpilih); localStorage.setItem('daftarProyek', JSON.stringify(projectsBaru)); muatProyek(); Toastify({ text: `Proyek "${namaProyekTerpilih}" telah dihapus.`, duration: 3000 }).showToast(); } }
function addShift(updateNumbers = true) { const shiftContainer = document.getElementById('shift-container'); const shiftBlock = document.createElement('div'); shiftBlock.className = 'shift-block shift-detail'; shiftBlock.innerHTML = `<h3 class="shift-title"></h3><button class="remove-shift-btn" onclick="this.closest('.shift-block').remove(); updateShiftNumbers();">Hapus</button><div class="form-group"><label>Inisial Operator</label><input type="text" class="operator" placeholder="Contoh: MH"></div><div class="form-group"><label>Shift</label><select class="shift-type"><option value="LS1">Longshift 1 (LS1)</option><option value="LS2">Longshift 2 (LS2)</option></select></div><div class="form-group"><label>Jumlah Proses</label><input type="number" class="jumlahProses" placeholder="Contoh: 4" oninput="createOutputInputs(this)"></div><div class="form-group"><label>Berat Input / In (kg)</label><input type="number" class="beratIn" step="0.01" placeholder="Contoh: 473.2"></div><div class="form-group"><label>Detail Berat Output per Proses</label><div class="output-details"><p>Isi "Jumlah Proses" terlebih dahulu.</p></div></div>`; shiftContainer.appendChild(shiftBlock); if(updateNumbers) updateShiftNumbers(); return shiftBlock; }
function addShiftSimple(updateNumbers = true) { const shiftContainer = document.getElementById('shift-container'); const shiftBlock = document.createElement('div'); shiftBlock.className = 'shift-block shift-simple'; shiftBlock.innerHTML = `<h3 class="shift-title"></h3><button class="remove-shift-btn" onclick="this.closest('.shift-block').remove(); updateShiftNumbers();">Hapus</button><div class="form-group"><label>Inisial Operator</label><input type="text" class="operator" placeholder="Contoh: UM"></div> <div class="form-group"><label>Shift</label><select class="shift-type"><option value="LS1">Longshift 1 (LS1)</option><option value="LS2">Longshift 2 (LS2)</option></select></div><div class="form-group"><label>Jumlah Proses</label><input type="number" class="jumlahProses" placeholder="Contoh: 3"></div><div class="form-group"><label>Total Berat Input (kg)</label><input type="number" class="beratIn" step="0.01" placeholder="Contoh: 287.70"></div><div class="form-group"><label>Total Berat Output (kg)</label><input type="number" class="totalBeratOut" step="0.01" placeholder="Contoh: 289.26"></div>`; shiftContainer.appendChild(shiftBlock); if(updateNumbers) updateShiftNumbers(); return shiftBlock; }
function updateShiftNumbers() { const allShiftBlocks = document.querySelectorAll('.shift-block'); allShiftBlocks.forEach((block, index) => { const shiftTitle = block.querySelector('.shift-title'); if (shiftTitle) { shiftTitle.textContent = `Data Shift ${index + 1}`; } }); }
function createOutputInputs(jumlahProsesInput) { const jumlah = jumlahProsesInput.value; const shiftBlock = jumlahProsesInput.closest('.shift-block'); const outputDetailsContainer = shiftBlock.querySelector('.output-details'); outputDetailsContainer.innerHTML = ''; if (jumlah > 0 && jumlah < 50) { for (let i = 1; i <= jumlah; i++) { const entryDiv = document.createElement('div'); entryDiv.className = 'output-entry'; entryDiv.innerHTML = `<label>Proses ${i}:</label><input type="number" step="0.01" class="output-weight" placeholder="kg">`; outputDetailsContainer.appendChild(entryDiv); } } else if (jumlah === '' || jumlah <= 0) { outputDetailsContainer.innerHTML = '<p>Isi "Jumlah Proses" terlebih dahulu.</p>'; } }
function generateReport() { const namaProyek = document.getElementById('projectSelect').value; const totalAwal = parseFloat(document.getElementById('totalSebelumnya').value) || 0; const inputTanggal = document.getElementById('tanggalLaporan').value; if (!inputTanggal) { Toastify({ text: "Tanggal laporan harus diisi.", duration: 3000, style: { background: "var(--danger-color)" } }).showToast(); return; } let tanggalFormatted; const days = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']; const tgl = new Date(inputTanggal + 'T00:00:00'); const dayName = days[tgl.getDay()]; const date = String(tgl.getDate()).padStart(2, '0'); const month = String(tgl.getMonth() + 1).padStart(2, '0'); const year = String(tgl.getFullYear()).slice(-2); tanggalFormatted = `${dayName}, ${date}/${month}/${year}`; const shiftBlocks = document.querySelectorAll('.shift-block'); let totalOutputHariIni = 0; let detailSemuaShift = ''; let isAdaShift = false; shiftBlocks.forEach(shiftBlock => { const operatorInput = shiftBlock.querySelector('.operator'); if (operatorInput && operatorInput.value.trim() !== '') { isAdaShift = true; const operator = operatorInput.value; const shiftType = shiftBlock.querySelector('.shift-type').value; const beratIn = parseFloat(shiftBlock.querySelector('.beratIn').value) || 0; let beratOutShift = 0; let jumlahProsesText = ''; const jumlahProses = shiftBlock.querySelector('.jumlahProses')?.value || ''; jumlahProsesText = jumlahProses ? `${jumlahProses}x` : ''; if (shiftBlock.classList.contains('shift-detail')) { const outputInputs = shiftBlock.querySelectorAll('.output-weight'); outputInputs.forEach(input => { beratOutShift += parseFloat(input.value) || 0; }); } else { beratOutShift = parseFloat(shiftBlock.querySelector('.totalBeratOut').value) || 0; } totalOutputHariIni += beratOutShift; detailSemuaShift += `${operator} ${shiftType} ${jumlahProsesText}\n`.replace('  ', ' '); detailSemuaShift += `In : ${beratIn.toLocaleString('id-ID')}kg\n`; detailSemuaShift += `Out : ${beratOutShift.toLocaleString('id-ID', {minimumFractionDigits: 2, maximumFractionDigits: 2})}kg\n\n`; } }); if (!isAdaShift) { Toastify({ text: "Silakan isi data untuk minimal satu shift.", duration: 3000 }).showToast(); return; } const totalAkhir = totalAwal + totalOutputHariIni; let projects = JSON.parse(localStorage.getItem('daftarProyek')) || []; const projectIndex = projects.findIndex(p => p.nama === namaProyek); if (projectIndex !== -1) { projects[projectIndex].totalOutput = totalAkhir; localStorage.setItem('daftarProyek', JSON.stringify(projects)); } let totalLine = ''; if (totalAwal > 0) { totalLine = `\n*Total out : ${totalAwal.toLocaleString('id-ID')} + ${totalOutputHariIni.toLocaleString('id-ID', {minimumFractionDigits: 2, maximumFractionDigits: 2})} = ${totalAkhir.toLocaleString('id-ID', {minimumFractionDigits: 2, maximumFractionDigits: 2})} kg*`; } else { totalLine = `\n*Total out : ${totalAkhir.toLocaleString('id-ID', {minimumFractionDigits: 2, maximumFractionDigits: 2})} kg*`; } const finalReportText = `*Update ${namaProyek}*\n\n*${tanggalFormatted}*\n\n${detailSemuaShift.trim()}${totalLine}`; document.getElementById('hasilLaporan').value = finalReportText; const newReport = { id: Date.now(), tanggalDibuat: new Date().toLocaleDateString('id-ID', { year: 'numeric', month: 'long', day: 'numeric' }), namaProyek: namaProyek, totalOutputHariIni: totalOutputHariIni, teksLaporan: finalReportText }; let history = JSON.parse(localStorage.getItem('riwayatLaporan')) || []; history.unshift(newReport); localStorage.setItem('riwayatLaporan', JSON.stringify(history)); Toastify({ text: "Laporan dibuat dan disimpan di riwayat!", duration: 3000, gravity: "top", position: "center", style: { background: "linear-gradient(to right, #00b09b, #96c93d)" } }).showToast(); }
function copyReport() { const textArea = document.getElementById('hasilLaporan'); if (textArea.value) { navigator.clipboard.writeText(textArea.value).then(() => { Toastify({ text: "Laporan berhasil disalin!", duration: 3000, gravity: "top", position: "center", style: { background: "linear-gradient(to right, #00b09b, #96c93d)" } }).showToast(); }).catch(err => { Toastify({ text: "Gagal menyalin teks.", duration: 3000, gravity: "top", position: "center", style: { background: "linear-gradient(to right, #ff5f6d, #ffc371)" } }).showToast(); }); } else { Toastify({ text: "Tidak ada laporan untuk disalin.", duration: 3000, gravity: "top", position: "center", style: { background: "linear-gradient(to right, #f7b733, #fc4a1a)" } }).showToast(); } }
function tampilkanRiwayat() { const modal = document.getElementById('historyModal'); const historyList = document.getElementById('historyList'); const detailText = document.getElementById('historyDetailText'); historyList.innerHTML = ''; detailText.value = ''; const history = JSON.parse(localStorage.getItem('riwayatLaporan')) || []; if (history.length === 0) { historyList.innerHTML = '<p>Belum ada riwayat laporan.</p>'; modal.classList.remove('hidden'); return; } history.forEach(report => { const item = document.createElement('div'); item.className = 'history-item'; item.dataset.id = report.id; item.onclick = () => tampilkanDetailLaporan(report.id); item.innerHTML = `<p class="date">${report.tanggalDibuat}</p><p class="project">${report.namaProyek} - Output: ${report.totalOutputHariIni.toLocaleString('id-ID')} kg</p>`; historyList.appendChild(item); }); modal.classList.remove('hidden'); }
function tampilkanDetailLaporan(id) { const history = JSON.parse(localStorage.getItem('riwayatLaporan')) || []; const report = history.find(r => r.id === id); if (report) { document.getElementById('historyDetailText').value = report.teksLaporan; document.querySelectorAll('.history-item').forEach(item => { item.classList.remove('active'); if (parseInt(item.dataset.id) === id) { item.classList.add('active'); } }); } }
function hapusRiwayat() { if (confirm('Apakah Anda yakin ingin menghapus SELURUH riwayat laporan? Tindakan ini tidak bisa dibatalkan.')) { localStorage.removeItem('riwayatLaporan'); Toastify({ text: "Seluruh riwayat telah dihapus.", duration: 3000 }).showToast(); tampilkanRiwayat(); } }
